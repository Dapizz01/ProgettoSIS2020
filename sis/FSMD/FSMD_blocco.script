# test con il primo input errato, bancomat_inserito 1, cod 450, richiesto 100, disponibile 500

# CODIFICA
# bancomat_inserito cod3 cod2 cod1 cod0 cr9 cr8 cr7 cr6 cr5 cr4 cr3 cr2 cr1 cr0 cd15 cd14 cd13 cd12 cd11 cd10 cd9 cd8 cd7 cd6 cd5 cd4 cd3 cd2 cd1 cd0 

# note: 
# 1 -> tutti i DC in input sono scritti come 0
# 2 -> cash_richiesto e disponibile sono sempre inseriti, così si verifica che non vengano erogati soldi fino a dopo l'inserimento del codice 

# 100: 0 0 0 1 1 0 0 1 0 0 ||| 500: 0 0 0 0 0 0 0 1 1 1 1 1 0 1 0 0




# inserimento bancomat
#                  |--------100------| |-----------500---------------|
simulate 1 0 0 0 0 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 1 0 0 

# PRIMO INSERIMENTO
# inserimento prima cifra errata
#          |--4--|
simulate 0 0 1 0 0 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 1 0 0 

#inserimento seconda cifra errata(ma non interessa)
#          |--4--|
simulate 0 0 1 0 0 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 1 0 0 

#inserimento terza cifra corretta(ma non interessa)
#          |--0--|
simulate 0 0 0 0 0 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 1 0 0 

#clock a vuoto (H -> B)
simulate 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0

# SECONDO INSERIMENTO
#inserimento prima cifra errata
#          |--6--|
simulate 0 0 1 1 0 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 1 0 0 

#inserimento seconda cifra errata(ma non interessa)
#          |--0--|
simulate 0 0 0 0 0 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 1 0 0 

#inserimento terza cifra corretta(ma non interessa)
#          |--0--|
simulate 0 0 0 0 0 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 1 0 0 

#clock a vuoto (H -> B)
simulate 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0

# TERZO INSERIMENTO
#inserimento prima cifra errata
#          |--4--|
simulate 0 0 1 0 0 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 1 0 0 

#inserimento seconda cifra errata(ma non interessa)
#          |--4--|
simulate 0 0 1 0 0 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 1 0 0 

#inserimento terza cifra corretta(ma non interessa)
#          |--0--|
simulate 0 0 0 0 0 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 1 0 0 

#clock a vuoto (H -> L)
simulate 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0

#clock a vuoto (L -> L) 
simulate 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0


# RISULTATO:
# OUTPUTS: reinserire_cod abilitazione_erog blocco_bancomat ce9 ce8 ce7 ce6 ce5 ce4 ce3 ce2 ce1 ce0 # in più: A B C D E
# NEXT STATE: ct_err1 ct_err0 minore st3 st2 st1 st0
# A 0001
# B 0000
# C 1100
# F 1000
# D 1101
# G 1001
# E 1011
# H 1111
# L 0010

################

#Network simulation:
#Outputs: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 # stato prossimo B
#Next state: 0000000

#Network simulation:
#Outputs: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 # stato prossimo F
#Next state: 0101000

#Network simulation:
#Outputs: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 # stato prossimo G
#Next state: 0101001

#Network simulation:
#Outputs: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 # stato prossimo H
#Next state: 0101111

#Network simulation:
#Outputs: 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 # stato prossimo B
#Next state: 0100000

#Network simulation:
#Outputs: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 # stato prossimo F
#Next state: 1001000

#Network simulation:
#Outputs: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 # stato prossimo G
#Next state: 1001001

#Network simulation:
#Outputs: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 # stato prossimo H
#Next state: 1001111

àNetwork simulation:
#Outputs: 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 # stato prossimo B
#Next state: 1000000

#Network simulation:
#Outputs: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 # stato prossimo F
#Next state: 1101000

#Network simulation:
#Outputs: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 # stato prossimo G
#Next state: 1101001

#Network simulation:
#Outputs: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 # stato prossimo H
#Next state: 1101111

#Network simulation:
#Outputs: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 # stato prossimo L
#Next state: 1100010

#Network simulation:
#Outputs: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 # stato prossimo L
#Next state: 1100010

